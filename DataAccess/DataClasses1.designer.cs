#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataAccess
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="GestionResiduos")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertCERTIFICADO(CERTIFICADO instance);
    partial void UpdateCERTIFICADO(CERTIFICADO instance);
    partial void DeleteCERTIFICADO(CERTIFICADO instance);
    partial void InsertTIPO_RESIDUO_X_GRADO(TIPO_RESIDUO_X_GRADO instance);
    partial void UpdateTIPO_RESIDUO_X_GRADO(TIPO_RESIDUO_X_GRADO instance);
    partial void DeleteTIPO_RESIDUO_X_GRADO(TIPO_RESIDUO_X_GRADO instance);
    partial void InsertTIPO_RESIDUO(TIPO_RESIDUO instance);
    partial void UpdateTIPO_RESIDUO(TIPO_RESIDUO instance);
    partial void DeleteTIPO_RESIDUO(TIPO_RESIDUO instance);
    partial void InsertTIPO_GESTION(TIPO_GESTION instance);
    partial void UpdateTIPO_GESTION(TIPO_GESTION instance);
    partial void DeleteTIPO_GESTION(TIPO_GESTION instance);
    partial void InsertRESIDUO(RESIDUO instance);
    partial void UpdateRESIDUO(RESIDUO instance);
    partial void DeleteRESIDUO(RESIDUO instance);
    partial void InsertREGISTRO(REGISTRO instance);
    partial void UpdateREGISTRO(REGISTRO instance);
    partial void DeleteREGISTRO(REGISTRO instance);
    partial void InsertMECANISMO_ENTREGA(MECANISMO_ENTREGA instance);
    partial void UpdateMECANISMO_ENTREGA(MECANISMO_ENTREGA instance);
    partial void DeleteMECANISMO_ENTREGA(MECANISMO_ENTREGA instance);
    partial void InsertPRESENTACION(PRESENTACION instance);
    partial void UpdatePRESENTACION(PRESENTACION instance);
    partial void DeletePRESENTACION(PRESENTACION instance);
    partial void InsertPROCESO_GENERADOR(PROCESO_GENERADOR instance);
    partial void UpdatePROCESO_GENERADOR(PROCESO_GENERADOR instance);
    partial void DeletePROCESO_GENERADOR(PROCESO_GENERADOR instance);
    partial void InsertGRADO_PELIGROSIDAD(GRADO_PELIGROSIDAD instance);
    partial void UpdateGRADO_PELIGROSIDAD(GRADO_PELIGROSIDAD instance);
    partial void DeleteGRADO_PELIGROSIDAD(GRADO_PELIGROSIDAD instance);
    partial void InsertGESTOR(GESTOR instance);
    partial void UpdateGESTOR(GESTOR instance);
    partial void DeleteGESTOR(GESTOR instance);
    partial void InsertGESTION_x_TIPO(GESTION_x_TIPO instance);
    partial void UpdateGESTION_x_TIPO(GESTION_x_TIPO instance);
    partial void DeleteGESTION_x_TIPO(GESTION_x_TIPO instance);
    partial void InsertGESTION(GESTION instance);
    partial void UpdateGESTION(GESTION instance);
    partial void DeleteGESTION(GESTION instance);
    partial void InsertESTADO_MATERIA(ESTADO_MATERIA instance);
    partial void UpdateESTADO_MATERIA(ESTADO_MATERIA instance);
    partial void DeleteESTADO_MATERIA(ESTADO_MATERIA instance);
    partial void InsertESTABLECIMIENTO(ESTABLECIMIENTO instance);
    partial void UpdateESTABLECIMIENTO(ESTABLECIMIENTO instance);
    partial void DeleteESTABLECIMIENTO(ESTABLECIMIENTO instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::DataAccess.Properties.Settings.Default.GestionResiduosConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CERTIFICADO> CERTIFICADO
		{
			get
			{
				return this.GetTable<CERTIFICADO>();
			}
		}
		
		public System.Data.Linq.Table<TIPO_RESIDUO_X_GRADO> TIPO_RESIDUO_X_GRADO
		{
			get
			{
				return this.GetTable<TIPO_RESIDUO_X_GRADO>();
			}
		}
		
		public System.Data.Linq.Table<TIPO_RESIDUO> TIPO_RESIDUO
		{
			get
			{
				return this.GetTable<TIPO_RESIDUO>();
			}
		}
		
		public System.Data.Linq.Table<TIPO_GESTION> TIPO_GESTION
		{
			get
			{
				return this.GetTable<TIPO_GESTION>();
			}
		}
		
		public System.Data.Linq.Table<RESIDUO> RESIDUO
		{
			get
			{
				return this.GetTable<RESIDUO>();
			}
		}
		
		public System.Data.Linq.Table<REGISTRO> REGISTRO
		{
			get
			{
				return this.GetTable<REGISTRO>();
			}
		}
		
		public System.Data.Linq.Table<MECANISMO_ENTREGA> MECANISMO_ENTREGA
		{
			get
			{
				return this.GetTable<MECANISMO_ENTREGA>();
			}
		}
		
		public System.Data.Linq.Table<PRESENTACION> PRESENTACION
		{
			get
			{
				return this.GetTable<PRESENTACION>();
			}
		}
		
		public System.Data.Linq.Table<PROCESO_GENERADOR> PROCESO_GENERADOR
		{
			get
			{
				return this.GetTable<PROCESO_GENERADOR>();
			}
		}
		
		public System.Data.Linq.Table<GRADO_PELIGROSIDAD> GRADO_PELIGROSIDAD
		{
			get
			{
				return this.GetTable<GRADO_PELIGROSIDAD>();
			}
		}
		
		public System.Data.Linq.Table<GESTOR> GESTOR
		{
			get
			{
				return this.GetTable<GESTOR>();
			}
		}
		
		public System.Data.Linq.Table<GESTION_x_TIPO> GESTION_x_TIPO
		{
			get
			{
				return this.GetTable<GESTION_x_TIPO>();
			}
		}
		
		public System.Data.Linq.Table<GESTION> GESTION
		{
			get
			{
				return this.GetTable<GESTION>();
			}
		}
		
		public System.Data.Linq.Table<ESTADO_MATERIA> ESTADO_MATERIA
		{
			get
			{
				return this.GetTable<ESTADO_MATERIA>();
			}
		}
		
		public System.Data.Linq.Table<ESTABLECIMIENTO> ESTABLECIMIENTO
		{
			get
			{
				return this.GetTable<ESTABLECIMIENTO>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CERTIFICADO")]
	public partial class CERTIFICADO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _DESCRIPCION;
		
		private EntitySet<REGISTRO> _REGISTRO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDESCRIPCIONChanging(string value);
    partial void OnDESCRIPCIONChanged();
    #endregion
		
		public CERTIFICADO()
		{
			this._REGISTRO = new EntitySet<REGISTRO>(new Action<REGISTRO>(this.attach_REGISTRO), new Action<REGISTRO>(this.detach_REGISTRO));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPCION", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
		public string DESCRIPCION
		{
			get
			{
				return this._DESCRIPCION;
			}
			set
			{
				if ((this._DESCRIPCION != value))
				{
					this.OnDESCRIPCIONChanging(value);
					this.SendPropertyChanging();
					this._DESCRIPCION = value;
					this.SendPropertyChanged("DESCRIPCION");
					this.OnDESCRIPCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CERTIFICADO_REGISTRO", Storage="_REGISTRO", ThisKey="ID", OtherKey="CERTIFICADO_ID")]
		public EntitySet<REGISTRO> REGISTRO
		{
			get
			{
				return this._REGISTRO;
			}
			set
			{
				this._REGISTRO.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_REGISTRO(REGISTRO entity)
		{
			this.SendPropertyChanging();
			entity.CERTIFICADO = this;
		}
		
		private void detach_REGISTRO(REGISTRO entity)
		{
			this.SendPropertyChanging();
			entity.CERTIFICADO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TIPO_RESIDUO_X_GRADO")]
	public partial class TIPO_RESIDUO_X_GRADO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _TIPO_RESIDUO_ID;
		
		private System.Nullable<int> _GRADO_ID;
		
		private EntityRef<TIPO_RESIDUO> _TIPO_RESIDUO;
		
		private EntityRef<GRADO_PELIGROSIDAD> _GRADO_PELIGROSIDAD;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTIPO_RESIDUO_IDChanging(int value);
    partial void OnTIPO_RESIDUO_IDChanged();
    partial void OnGRADO_IDChanging(System.Nullable<int> value);
    partial void OnGRADO_IDChanged();
    #endregion
		
		public TIPO_RESIDUO_X_GRADO()
		{
			this._TIPO_RESIDUO = default(EntityRef<TIPO_RESIDUO>);
			this._GRADO_PELIGROSIDAD = default(EntityRef<GRADO_PELIGROSIDAD>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIPO_RESIDUO_ID", DbType="Int NOT NULL")]
		public int TIPO_RESIDUO_ID
		{
			get
			{
				return this._TIPO_RESIDUO_ID;
			}
			set
			{
				if ((this._TIPO_RESIDUO_ID != value))
				{
					if (this._TIPO_RESIDUO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTIPO_RESIDUO_IDChanging(value);
					this.SendPropertyChanging();
					this._TIPO_RESIDUO_ID = value;
					this.SendPropertyChanged("TIPO_RESIDUO_ID");
					this.OnTIPO_RESIDUO_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GRADO_ID", DbType="Int")]
		public System.Nullable<int> GRADO_ID
		{
			get
			{
				return this._GRADO_ID;
			}
			set
			{
				if ((this._GRADO_ID != value))
				{
					if (this._GRADO_PELIGROSIDAD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGRADO_IDChanging(value);
					this.SendPropertyChanging();
					this._GRADO_ID = value;
					this.SendPropertyChanged("GRADO_ID");
					this.OnGRADO_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPO_RESIDUO_TIPO_RESIDUO_X_GRADO", Storage="_TIPO_RESIDUO", ThisKey="TIPO_RESIDUO_ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TIPO_RESIDUO TIPO_RESIDUO
		{
			get
			{
				return this._TIPO_RESIDUO.Entity;
			}
			set
			{
				TIPO_RESIDUO previousValue = this._TIPO_RESIDUO.Entity;
				if (((previousValue != value) 
							|| (this._TIPO_RESIDUO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TIPO_RESIDUO.Entity = null;
						previousValue.TIPO_RESIDUO_X_GRADO.Remove(this);
					}
					this._TIPO_RESIDUO.Entity = value;
					if ((value != null))
					{
						value.TIPO_RESIDUO_X_GRADO.Add(this);
						this._TIPO_RESIDUO_ID = value.ID;
					}
					else
					{
						this._TIPO_RESIDUO_ID = default(int);
					}
					this.SendPropertyChanged("TIPO_RESIDUO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GRADO_PELIGROSIDAD_TIPO_RESIDUO_X_GRADO", Storage="_GRADO_PELIGROSIDAD", ThisKey="GRADO_ID", OtherKey="ID", IsForeignKey=true, DeleteRule="CASCADE")]
		public GRADO_PELIGROSIDAD GRADO_PELIGROSIDAD
		{
			get
			{
				return this._GRADO_PELIGROSIDAD.Entity;
			}
			set
			{
				GRADO_PELIGROSIDAD previousValue = this._GRADO_PELIGROSIDAD.Entity;
				if (((previousValue != value) 
							|| (this._GRADO_PELIGROSIDAD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GRADO_PELIGROSIDAD.Entity = null;
						previousValue.TIPO_RESIDUO_X_GRADO.Remove(this);
					}
					this._GRADO_PELIGROSIDAD.Entity = value;
					if ((value != null))
					{
						value.TIPO_RESIDUO_X_GRADO.Add(this);
						this._GRADO_ID = value.ID;
					}
					else
					{
						this._GRADO_ID = default(Nullable<int>);
					}
					this.SendPropertyChanged("GRADO_PELIGROSIDAD");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TIPO_RESIDUO")]
	public partial class TIPO_RESIDUO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _DESCRIPCION;
		
		private EntitySet<TIPO_RESIDUO_X_GRADO> _TIPO_RESIDUO_X_GRADO;
		
		private EntitySet<RESIDUO> _RESIDUO;
		
		private EntitySet<REGISTRO> _REGISTRO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDESCRIPCIONChanging(string value);
    partial void OnDESCRIPCIONChanged();
    #endregion
		
		public TIPO_RESIDUO()
		{
			this._TIPO_RESIDUO_X_GRADO = new EntitySet<TIPO_RESIDUO_X_GRADO>(new Action<TIPO_RESIDUO_X_GRADO>(this.attach_TIPO_RESIDUO_X_GRADO), new Action<TIPO_RESIDUO_X_GRADO>(this.detach_TIPO_RESIDUO_X_GRADO));
			this._RESIDUO = new EntitySet<RESIDUO>(new Action<RESIDUO>(this.attach_RESIDUO), new Action<RESIDUO>(this.detach_RESIDUO));
			this._REGISTRO = new EntitySet<REGISTRO>(new Action<REGISTRO>(this.attach_REGISTRO), new Action<REGISTRO>(this.detach_REGISTRO));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPCION", DbType="VarChar(180) NOT NULL", CanBeNull=false)]
		public string DESCRIPCION
		{
			get
			{
				return this._DESCRIPCION;
			}
			set
			{
				if ((this._DESCRIPCION != value))
				{
					this.OnDESCRIPCIONChanging(value);
					this.SendPropertyChanging();
					this._DESCRIPCION = value;
					this.SendPropertyChanged("DESCRIPCION");
					this.OnDESCRIPCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPO_RESIDUO_TIPO_RESIDUO_X_GRADO", Storage="_TIPO_RESIDUO_X_GRADO", ThisKey="ID", OtherKey="TIPO_RESIDUO_ID")]
		public EntitySet<TIPO_RESIDUO_X_GRADO> TIPO_RESIDUO_X_GRADO
		{
			get
			{
				return this._TIPO_RESIDUO_X_GRADO;
			}
			set
			{
				this._TIPO_RESIDUO_X_GRADO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPO_RESIDUO_RESIDUO", Storage="_RESIDUO", ThisKey="ID", OtherKey="TIPO_RESIDUO_ID")]
		public EntitySet<RESIDUO> RESIDUO
		{
			get
			{
				return this._RESIDUO;
			}
			set
			{
				this._RESIDUO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPO_RESIDUO_REGISTRO", Storage="_REGISTRO", ThisKey="ID", OtherKey="TIPO_RESIDUO_ID")]
		public EntitySet<REGISTRO> REGISTRO
		{
			get
			{
				return this._REGISTRO;
			}
			set
			{
				this._REGISTRO.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TIPO_RESIDUO_X_GRADO(TIPO_RESIDUO_X_GRADO entity)
		{
			this.SendPropertyChanging();
			entity.TIPO_RESIDUO = this;
		}
		
		private void detach_TIPO_RESIDUO_X_GRADO(TIPO_RESIDUO_X_GRADO entity)
		{
			this.SendPropertyChanging();
			entity.TIPO_RESIDUO = null;
		}
		
		private void attach_RESIDUO(RESIDUO entity)
		{
			this.SendPropertyChanging();
			entity.TIPO_RESIDUO = this;
		}
		
		private void detach_RESIDUO(RESIDUO entity)
		{
			this.SendPropertyChanging();
			entity.TIPO_RESIDUO = null;
		}
		
		private void attach_REGISTRO(REGISTRO entity)
		{
			this.SendPropertyChanging();
			entity.TIPO_RESIDUO = this;
		}
		
		private void detach_REGISTRO(REGISTRO entity)
		{
			this.SendPropertyChanging();
			entity.TIPO_RESIDUO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TIPO_GESTION")]
	public partial class TIPO_GESTION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _DESCRIPCION;
		
		private EntitySet<REGISTRO> _REGISTRO;
		
		private EntitySet<GESTION_x_TIPO> _GESTION_x_TIPO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDESCRIPCIONChanging(string value);
    partial void OnDESCRIPCIONChanged();
    #endregion
		
		public TIPO_GESTION()
		{
			this._REGISTRO = new EntitySet<REGISTRO>(new Action<REGISTRO>(this.attach_REGISTRO), new Action<REGISTRO>(this.detach_REGISTRO));
			this._GESTION_x_TIPO = new EntitySet<GESTION_x_TIPO>(new Action<GESTION_x_TIPO>(this.attach_GESTION_x_TIPO), new Action<GESTION_x_TIPO>(this.detach_GESTION_x_TIPO));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPCION", DbType="VarChar(120) NOT NULL", CanBeNull=false)]
		public string DESCRIPCION
		{
			get
			{
				return this._DESCRIPCION;
			}
			set
			{
				if ((this._DESCRIPCION != value))
				{
					this.OnDESCRIPCIONChanging(value);
					this.SendPropertyChanging();
					this._DESCRIPCION = value;
					this.SendPropertyChanged("DESCRIPCION");
					this.OnDESCRIPCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPO_GESTION_REGISTRO", Storage="_REGISTRO", ThisKey="ID", OtherKey="TIPO_GESTION_ID")]
		public EntitySet<REGISTRO> REGISTRO
		{
			get
			{
				return this._REGISTRO;
			}
			set
			{
				this._REGISTRO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPO_GESTION_GESTION_x_TIPO", Storage="_GESTION_x_TIPO", ThisKey="ID", OtherKey="TIPO_ID")]
		public EntitySet<GESTION_x_TIPO> GESTION_x_TIPO
		{
			get
			{
				return this._GESTION_x_TIPO;
			}
			set
			{
				this._GESTION_x_TIPO.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_REGISTRO(REGISTRO entity)
		{
			this.SendPropertyChanging();
			entity.TIPO_GESTION = this;
		}
		
		private void detach_REGISTRO(REGISTRO entity)
		{
			this.SendPropertyChanging();
			entity.TIPO_GESTION = null;
		}
		
		private void attach_GESTION_x_TIPO(GESTION_x_TIPO entity)
		{
			this.SendPropertyChanging();
			entity.TIPO_GESTION = this;
		}
		
		private void detach_GESTION_x_TIPO(GESTION_x_TIPO entity)
		{
			this.SendPropertyChanging();
			entity.TIPO_GESTION = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RESIDUO")]
	public partial class RESIDUO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NOMBRE;
		
		private string _DESCRIPCION;
		
		private int _TIPO_RESIDUO_ID;
		
		private int _GRADO_PELIGROSIDAD_ID;
		
		private int _ESTADO_MATERIA;
		
		private EntitySet<REGISTRO> _REGISTRO;
		
		private EntityRef<TIPO_RESIDUO> _TIPO_RESIDUO;
		
		private EntityRef<GRADO_PELIGROSIDAD> _GRADO_PELIGROSIDAD;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    partial void OnDESCRIPCIONChanging(string value);
    partial void OnDESCRIPCIONChanged();
    partial void OnTIPO_RESIDUO_IDChanging(int value);
    partial void OnTIPO_RESIDUO_IDChanged();
    partial void OnGRADO_PELIGROSIDAD_IDChanging(int value);
    partial void OnGRADO_PELIGROSIDAD_IDChanged();
    partial void OnESTADO_MATERIAChanging(int value);
    partial void OnESTADO_MATERIAChanged();
    #endregion
		
		public RESIDUO()
		{
			this._REGISTRO = new EntitySet<REGISTRO>(new Action<REGISTRO>(this.attach_REGISTRO), new Action<REGISTRO>(this.detach_REGISTRO));
			this._TIPO_RESIDUO = default(EntityRef<TIPO_RESIDUO>);
			this._GRADO_PELIGROSIDAD = default(EntityRef<GRADO_PELIGROSIDAD>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPCION", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string DESCRIPCION
		{
			get
			{
				return this._DESCRIPCION;
			}
			set
			{
				if ((this._DESCRIPCION != value))
				{
					this.OnDESCRIPCIONChanging(value);
					this.SendPropertyChanging();
					this._DESCRIPCION = value;
					this.SendPropertyChanged("DESCRIPCION");
					this.OnDESCRIPCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIPO_RESIDUO_ID", DbType="Int NOT NULL")]
		public int TIPO_RESIDUO_ID
		{
			get
			{
				return this._TIPO_RESIDUO_ID;
			}
			set
			{
				if ((this._TIPO_RESIDUO_ID != value))
				{
					if (this._TIPO_RESIDUO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTIPO_RESIDUO_IDChanging(value);
					this.SendPropertyChanging();
					this._TIPO_RESIDUO_ID = value;
					this.SendPropertyChanged("TIPO_RESIDUO_ID");
					this.OnTIPO_RESIDUO_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GRADO_PELIGROSIDAD_ID", DbType="Int NOT NULL")]
		public int GRADO_PELIGROSIDAD_ID
		{
			get
			{
				return this._GRADO_PELIGROSIDAD_ID;
			}
			set
			{
				if ((this._GRADO_PELIGROSIDAD_ID != value))
				{
					if (this._GRADO_PELIGROSIDAD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGRADO_PELIGROSIDAD_IDChanging(value);
					this.SendPropertyChanging();
					this._GRADO_PELIGROSIDAD_ID = value;
					this.SendPropertyChanged("GRADO_PELIGROSIDAD_ID");
					this.OnGRADO_PELIGROSIDAD_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESTADO_MATERIA", DbType="Int NOT NULL")]
		public int ESTADO_MATERIA
		{
			get
			{
				return this._ESTADO_MATERIA;
			}
			set
			{
				if ((this._ESTADO_MATERIA != value))
				{
					this.OnESTADO_MATERIAChanging(value);
					this.SendPropertyChanging();
					this._ESTADO_MATERIA = value;
					this.SendPropertyChanged("ESTADO_MATERIA");
					this.OnESTADO_MATERIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RESIDUO_REGISTRO", Storage="_REGISTRO", ThisKey="ID", OtherKey="RESIDUO_ID")]
		public EntitySet<REGISTRO> REGISTRO
		{
			get
			{
				return this._REGISTRO;
			}
			set
			{
				this._REGISTRO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPO_RESIDUO_RESIDUO", Storage="_TIPO_RESIDUO", ThisKey="TIPO_RESIDUO_ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TIPO_RESIDUO TIPO_RESIDUO
		{
			get
			{
				return this._TIPO_RESIDUO.Entity;
			}
			set
			{
				TIPO_RESIDUO previousValue = this._TIPO_RESIDUO.Entity;
				if (((previousValue != value) 
							|| (this._TIPO_RESIDUO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TIPO_RESIDUO.Entity = null;
						previousValue.RESIDUO.Remove(this);
					}
					this._TIPO_RESIDUO.Entity = value;
					if ((value != null))
					{
						value.RESIDUO.Add(this);
						this._TIPO_RESIDUO_ID = value.ID;
					}
					else
					{
						this._TIPO_RESIDUO_ID = default(int);
					}
					this.SendPropertyChanged("TIPO_RESIDUO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GRADO_PELIGROSIDAD_RESIDUO", Storage="_GRADO_PELIGROSIDAD", ThisKey="GRADO_PELIGROSIDAD_ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public GRADO_PELIGROSIDAD GRADO_PELIGROSIDAD
		{
			get
			{
				return this._GRADO_PELIGROSIDAD.Entity;
			}
			set
			{
				GRADO_PELIGROSIDAD previousValue = this._GRADO_PELIGROSIDAD.Entity;
				if (((previousValue != value) 
							|| (this._GRADO_PELIGROSIDAD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GRADO_PELIGROSIDAD.Entity = null;
						previousValue.RESIDUO.Remove(this);
					}
					this._GRADO_PELIGROSIDAD.Entity = value;
					if ((value != null))
					{
						value.RESIDUO.Add(this);
						this._GRADO_PELIGROSIDAD_ID = value.ID;
					}
					else
					{
						this._GRADO_PELIGROSIDAD_ID = default(int);
					}
					this.SendPropertyChanged("GRADO_PELIGROSIDAD");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_REGISTRO(REGISTRO entity)
		{
			this.SendPropertyChanging();
			entity.RESIDUO = this;
		}
		
		private void detach_REGISTRO(REGISTRO entity)
		{
			this.SendPropertyChanging();
			entity.RESIDUO = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.REGISTRO")]
	public partial class REGISTRO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _RESIDUO_ID;
		
		private System.DateTime _FECHA;
		
		private string _DESCRIPCION;
		
		private int _TIPO_RESIDUO_ID;
		
		private int _ESTABLECIMIENTO_ID;
		
		private int _PROCESO_GENERADOR_ID;
		
		private int _GRADO_PELIGROSIDAD_ID;
		
		private int _ESTADO_ID;
		
		private int _CANTIDAD;
		
		private int _GESTION_ID;
		
		private int _TIPO_GESTION_ID;
		
		private int _MECANISMO_ENTREGA_ID;
		
		private int _PRESENTACION_ID;
		
		private int _GESTOR_ID;
		
		private int _CERTIFICADO_ID;
		
		private EntityRef<CERTIFICADO> _CERTIFICADO;
		
		private EntityRef<RESIDUO> _RESIDUO;
		
		private EntityRef<TIPO_GESTION> _TIPO_GESTION;
		
		private EntityRef<TIPO_RESIDUO> _TIPO_RESIDUO;
		
		private EntityRef<MECANISMO_ENTREGA> _MECANISMO_ENTREGA;
		
		private EntityRef<PRESENTACION> _PRESENTACION;
		
		private EntityRef<PROCESO_GENERADOR> _PROCESO_GENERADOR;
		
		private EntityRef<GRADO_PELIGROSIDAD> _GRADO_PELIGROSIDAD;
		
		private EntityRef<GESTOR> _GESTOR;
		
		private EntityRef<GESTION> _GESTION;
		
		private EntityRef<ESTADO_MATERIA> _ESTADO_MATERIA;
		
		private EntityRef<ESTABLECIMIENTO> _ESTABLECIMIENTO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnRESIDUO_IDChanging(int value);
    partial void OnRESIDUO_IDChanged();
    partial void OnFECHAChanging(System.DateTime value);
    partial void OnFECHAChanged();
    partial void OnDESCRIPCIONChanging(string value);
    partial void OnDESCRIPCIONChanged();
    partial void OnTIPO_RESIDUO_IDChanging(int value);
    partial void OnTIPO_RESIDUO_IDChanged();
    partial void OnESTABLECIMIENTO_IDChanging(int value);
    partial void OnESTABLECIMIENTO_IDChanged();
    partial void OnPROCESO_GENERADOR_IDChanging(int value);
    partial void OnPROCESO_GENERADOR_IDChanged();
    partial void OnGRADO_PELIGROSIDAD_IDChanging(int value);
    partial void OnGRADO_PELIGROSIDAD_IDChanged();
    partial void OnESTADO_IDChanging(int value);
    partial void OnESTADO_IDChanged();
    partial void OnCANTIDADChanging(int value);
    partial void OnCANTIDADChanged();
    partial void OnGESTION_IDChanging(int value);
    partial void OnGESTION_IDChanged();
    partial void OnTIPO_GESTION_IDChanging(int value);
    partial void OnTIPO_GESTION_IDChanged();
    partial void OnMECANISMO_ENTREGA_IDChanging(int value);
    partial void OnMECANISMO_ENTREGA_IDChanged();
    partial void OnPRESENTACION_IDChanging(int value);
    partial void OnPRESENTACION_IDChanged();
    partial void OnGESTOR_IDChanging(int value);
    partial void OnGESTOR_IDChanged();
    partial void OnCERTIFICADO_IDChanging(int value);
    partial void OnCERTIFICADO_IDChanged();
    #endregion
		
		public REGISTRO()
		{
			this._CERTIFICADO = default(EntityRef<CERTIFICADO>);
			this._RESIDUO = default(EntityRef<RESIDUO>);
			this._TIPO_GESTION = default(EntityRef<TIPO_GESTION>);
			this._TIPO_RESIDUO = default(EntityRef<TIPO_RESIDUO>);
			this._MECANISMO_ENTREGA = default(EntityRef<MECANISMO_ENTREGA>);
			this._PRESENTACION = default(EntityRef<PRESENTACION>);
			this._PROCESO_GENERADOR = default(EntityRef<PROCESO_GENERADOR>);
			this._GRADO_PELIGROSIDAD = default(EntityRef<GRADO_PELIGROSIDAD>);
			this._GESTOR = default(EntityRef<GESTOR>);
			this._GESTION = default(EntityRef<GESTION>);
			this._ESTADO_MATERIA = default(EntityRef<ESTADO_MATERIA>);
			this._ESTABLECIMIENTO = default(EntityRef<ESTABLECIMIENTO>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RESIDUO_ID", DbType="Int NOT NULL")]
		public int RESIDUO_ID
		{
			get
			{
				return this._RESIDUO_ID;
			}
			set
			{
				if ((this._RESIDUO_ID != value))
				{
					if (this._RESIDUO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRESIDUO_IDChanging(value);
					this.SendPropertyChanging();
					this._RESIDUO_ID = value;
					this.SendPropertyChanged("RESIDUO_ID");
					this.OnRESIDUO_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FECHA", DbType="Date NOT NULL")]
		public System.DateTime FECHA
		{
			get
			{
				return this._FECHA;
			}
			set
			{
				if ((this._FECHA != value))
				{
					this.OnFECHAChanging(value);
					this.SendPropertyChanging();
					this._FECHA = value;
					this.SendPropertyChanged("FECHA");
					this.OnFECHAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPCION", DbType="VarChar(250) NOT NULL", CanBeNull=false)]
		public string DESCRIPCION
		{
			get
			{
				return this._DESCRIPCION;
			}
			set
			{
				if ((this._DESCRIPCION != value))
				{
					this.OnDESCRIPCIONChanging(value);
					this.SendPropertyChanging();
					this._DESCRIPCION = value;
					this.SendPropertyChanged("DESCRIPCION");
					this.OnDESCRIPCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIPO_RESIDUO_ID", DbType="Int NOT NULL")]
		public int TIPO_RESIDUO_ID
		{
			get
			{
				return this._TIPO_RESIDUO_ID;
			}
			set
			{
				if ((this._TIPO_RESIDUO_ID != value))
				{
					if (this._TIPO_RESIDUO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTIPO_RESIDUO_IDChanging(value);
					this.SendPropertyChanging();
					this._TIPO_RESIDUO_ID = value;
					this.SendPropertyChanged("TIPO_RESIDUO_ID");
					this.OnTIPO_RESIDUO_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESTABLECIMIENTO_ID", DbType="Int NOT NULL")]
		public int ESTABLECIMIENTO_ID
		{
			get
			{
				return this._ESTABLECIMIENTO_ID;
			}
			set
			{
				if ((this._ESTABLECIMIENTO_ID != value))
				{
					if (this._ESTABLECIMIENTO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnESTABLECIMIENTO_IDChanging(value);
					this.SendPropertyChanging();
					this._ESTABLECIMIENTO_ID = value;
					this.SendPropertyChanged("ESTABLECIMIENTO_ID");
					this.OnESTABLECIMIENTO_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROCESO_GENERADOR_ID", DbType="Int NOT NULL")]
		public int PROCESO_GENERADOR_ID
		{
			get
			{
				return this._PROCESO_GENERADOR_ID;
			}
			set
			{
				if ((this._PROCESO_GENERADOR_ID != value))
				{
					if (this._PROCESO_GENERADOR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPROCESO_GENERADOR_IDChanging(value);
					this.SendPropertyChanging();
					this._PROCESO_GENERADOR_ID = value;
					this.SendPropertyChanged("PROCESO_GENERADOR_ID");
					this.OnPROCESO_GENERADOR_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GRADO_PELIGROSIDAD_ID", DbType="Int NOT NULL")]
		public int GRADO_PELIGROSIDAD_ID
		{
			get
			{
				return this._GRADO_PELIGROSIDAD_ID;
			}
			set
			{
				if ((this._GRADO_PELIGROSIDAD_ID != value))
				{
					if (this._GRADO_PELIGROSIDAD.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGRADO_PELIGROSIDAD_IDChanging(value);
					this.SendPropertyChanging();
					this._GRADO_PELIGROSIDAD_ID = value;
					this.SendPropertyChanged("GRADO_PELIGROSIDAD_ID");
					this.OnGRADO_PELIGROSIDAD_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ESTADO_ID", DbType="Int NOT NULL")]
		public int ESTADO_ID
		{
			get
			{
				return this._ESTADO_ID;
			}
			set
			{
				if ((this._ESTADO_ID != value))
				{
					if (this._ESTADO_MATERIA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnESTADO_IDChanging(value);
					this.SendPropertyChanging();
					this._ESTADO_ID = value;
					this.SendPropertyChanged("ESTADO_ID");
					this.OnESTADO_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CANTIDAD", DbType="Int NOT NULL")]
		public int CANTIDAD
		{
			get
			{
				return this._CANTIDAD;
			}
			set
			{
				if ((this._CANTIDAD != value))
				{
					this.OnCANTIDADChanging(value);
					this.SendPropertyChanging();
					this._CANTIDAD = value;
					this.SendPropertyChanged("CANTIDAD");
					this.OnCANTIDADChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GESTION_ID", DbType="Int NOT NULL")]
		public int GESTION_ID
		{
			get
			{
				return this._GESTION_ID;
			}
			set
			{
				if ((this._GESTION_ID != value))
				{
					if (this._GESTION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGESTION_IDChanging(value);
					this.SendPropertyChanging();
					this._GESTION_ID = value;
					this.SendPropertyChanged("GESTION_ID");
					this.OnGESTION_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIPO_GESTION_ID", DbType="Int NOT NULL")]
		public int TIPO_GESTION_ID
		{
			get
			{
				return this._TIPO_GESTION_ID;
			}
			set
			{
				if ((this._TIPO_GESTION_ID != value))
				{
					if (this._TIPO_GESTION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTIPO_GESTION_IDChanging(value);
					this.SendPropertyChanging();
					this._TIPO_GESTION_ID = value;
					this.SendPropertyChanged("TIPO_GESTION_ID");
					this.OnTIPO_GESTION_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MECANISMO_ENTREGA_ID", DbType="Int NOT NULL")]
		public int MECANISMO_ENTREGA_ID
		{
			get
			{
				return this._MECANISMO_ENTREGA_ID;
			}
			set
			{
				if ((this._MECANISMO_ENTREGA_ID != value))
				{
					if (this._MECANISMO_ENTREGA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMECANISMO_ENTREGA_IDChanging(value);
					this.SendPropertyChanging();
					this._MECANISMO_ENTREGA_ID = value;
					this.SendPropertyChanged("MECANISMO_ENTREGA_ID");
					this.OnMECANISMO_ENTREGA_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRESENTACION_ID", DbType="Int NOT NULL")]
		public int PRESENTACION_ID
		{
			get
			{
				return this._PRESENTACION_ID;
			}
			set
			{
				if ((this._PRESENTACION_ID != value))
				{
					if (this._PRESENTACION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnPRESENTACION_IDChanging(value);
					this.SendPropertyChanging();
					this._PRESENTACION_ID = value;
					this.SendPropertyChanged("PRESENTACION_ID");
					this.OnPRESENTACION_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GESTOR_ID", DbType="Int NOT NULL")]
		public int GESTOR_ID
		{
			get
			{
				return this._GESTOR_ID;
			}
			set
			{
				if ((this._GESTOR_ID != value))
				{
					if (this._GESTOR.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGESTOR_IDChanging(value);
					this.SendPropertyChanging();
					this._GESTOR_ID = value;
					this.SendPropertyChanged("GESTOR_ID");
					this.OnGESTOR_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CERTIFICADO_ID", DbType="Int NOT NULL")]
		public int CERTIFICADO_ID
		{
			get
			{
				return this._CERTIFICADO_ID;
			}
			set
			{
				if ((this._CERTIFICADO_ID != value))
				{
					if (this._CERTIFICADO.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCERTIFICADO_IDChanging(value);
					this.SendPropertyChanging();
					this._CERTIFICADO_ID = value;
					this.SendPropertyChanged("CERTIFICADO_ID");
					this.OnCERTIFICADO_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CERTIFICADO_REGISTRO", Storage="_CERTIFICADO", ThisKey="CERTIFICADO_ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public CERTIFICADO CERTIFICADO
		{
			get
			{
				return this._CERTIFICADO.Entity;
			}
			set
			{
				CERTIFICADO previousValue = this._CERTIFICADO.Entity;
				if (((previousValue != value) 
							|| (this._CERTIFICADO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CERTIFICADO.Entity = null;
						previousValue.REGISTRO.Remove(this);
					}
					this._CERTIFICADO.Entity = value;
					if ((value != null))
					{
						value.REGISTRO.Add(this);
						this._CERTIFICADO_ID = value.ID;
					}
					else
					{
						this._CERTIFICADO_ID = default(int);
					}
					this.SendPropertyChanged("CERTIFICADO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RESIDUO_REGISTRO", Storage="_RESIDUO", ThisKey="RESIDUO_ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public RESIDUO RESIDUO
		{
			get
			{
				return this._RESIDUO.Entity;
			}
			set
			{
				RESIDUO previousValue = this._RESIDUO.Entity;
				if (((previousValue != value) 
							|| (this._RESIDUO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RESIDUO.Entity = null;
						previousValue.REGISTRO.Remove(this);
					}
					this._RESIDUO.Entity = value;
					if ((value != null))
					{
						value.REGISTRO.Add(this);
						this._RESIDUO_ID = value.ID;
					}
					else
					{
						this._RESIDUO_ID = default(int);
					}
					this.SendPropertyChanged("RESIDUO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPO_GESTION_REGISTRO", Storage="_TIPO_GESTION", ThisKey="TIPO_GESTION_ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TIPO_GESTION TIPO_GESTION
		{
			get
			{
				return this._TIPO_GESTION.Entity;
			}
			set
			{
				TIPO_GESTION previousValue = this._TIPO_GESTION.Entity;
				if (((previousValue != value) 
							|| (this._TIPO_GESTION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TIPO_GESTION.Entity = null;
						previousValue.REGISTRO.Remove(this);
					}
					this._TIPO_GESTION.Entity = value;
					if ((value != null))
					{
						value.REGISTRO.Add(this);
						this._TIPO_GESTION_ID = value.ID;
					}
					else
					{
						this._TIPO_GESTION_ID = default(int);
					}
					this.SendPropertyChanged("TIPO_GESTION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPO_RESIDUO_REGISTRO", Storage="_TIPO_RESIDUO", ThisKey="TIPO_RESIDUO_ID", OtherKey="ID", IsForeignKey=true)]
		public TIPO_RESIDUO TIPO_RESIDUO
		{
			get
			{
				return this._TIPO_RESIDUO.Entity;
			}
			set
			{
				TIPO_RESIDUO previousValue = this._TIPO_RESIDUO.Entity;
				if (((previousValue != value) 
							|| (this._TIPO_RESIDUO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TIPO_RESIDUO.Entity = null;
						previousValue.REGISTRO.Remove(this);
					}
					this._TIPO_RESIDUO.Entity = value;
					if ((value != null))
					{
						value.REGISTRO.Add(this);
						this._TIPO_RESIDUO_ID = value.ID;
					}
					else
					{
						this._TIPO_RESIDUO_ID = default(int);
					}
					this.SendPropertyChanged("TIPO_RESIDUO");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MECANISMO_ENTREGA_REGISTRO", Storage="_MECANISMO_ENTREGA", ThisKey="MECANISMO_ENTREGA_ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public MECANISMO_ENTREGA MECANISMO_ENTREGA
		{
			get
			{
				return this._MECANISMO_ENTREGA.Entity;
			}
			set
			{
				MECANISMO_ENTREGA previousValue = this._MECANISMO_ENTREGA.Entity;
				if (((previousValue != value) 
							|| (this._MECANISMO_ENTREGA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MECANISMO_ENTREGA.Entity = null;
						previousValue.REGISTRO.Remove(this);
					}
					this._MECANISMO_ENTREGA.Entity = value;
					if ((value != null))
					{
						value.REGISTRO.Add(this);
						this._MECANISMO_ENTREGA_ID = value.ID;
					}
					else
					{
						this._MECANISMO_ENTREGA_ID = default(int);
					}
					this.SendPropertyChanged("MECANISMO_ENTREGA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRESENTACION_REGISTRO", Storage="_PRESENTACION", ThisKey="PRESENTACION_ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PRESENTACION PRESENTACION
		{
			get
			{
				return this._PRESENTACION.Entity;
			}
			set
			{
				PRESENTACION previousValue = this._PRESENTACION.Entity;
				if (((previousValue != value) 
							|| (this._PRESENTACION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRESENTACION.Entity = null;
						previousValue.REGISTRO.Remove(this);
					}
					this._PRESENTACION.Entity = value;
					if ((value != null))
					{
						value.REGISTRO.Add(this);
						this._PRESENTACION_ID = value.ID;
					}
					else
					{
						this._PRESENTACION_ID = default(int);
					}
					this.SendPropertyChanged("PRESENTACION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PROCESO_GENERADOR_REGISTRO", Storage="_PROCESO_GENERADOR", ThisKey="PROCESO_GENERADOR_ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public PROCESO_GENERADOR PROCESO_GENERADOR
		{
			get
			{
				return this._PROCESO_GENERADOR.Entity;
			}
			set
			{
				PROCESO_GENERADOR previousValue = this._PROCESO_GENERADOR.Entity;
				if (((previousValue != value) 
							|| (this._PROCESO_GENERADOR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PROCESO_GENERADOR.Entity = null;
						previousValue.REGISTRO.Remove(this);
					}
					this._PROCESO_GENERADOR.Entity = value;
					if ((value != null))
					{
						value.REGISTRO.Add(this);
						this._PROCESO_GENERADOR_ID = value.ID;
					}
					else
					{
						this._PROCESO_GENERADOR_ID = default(int);
					}
					this.SendPropertyChanged("PROCESO_GENERADOR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GRADO_PELIGROSIDAD_REGISTRO", Storage="_GRADO_PELIGROSIDAD", ThisKey="GRADO_PELIGROSIDAD_ID", OtherKey="ID", IsForeignKey=true)]
		public GRADO_PELIGROSIDAD GRADO_PELIGROSIDAD
		{
			get
			{
				return this._GRADO_PELIGROSIDAD.Entity;
			}
			set
			{
				GRADO_PELIGROSIDAD previousValue = this._GRADO_PELIGROSIDAD.Entity;
				if (((previousValue != value) 
							|| (this._GRADO_PELIGROSIDAD.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GRADO_PELIGROSIDAD.Entity = null;
						previousValue.REGISTRO.Remove(this);
					}
					this._GRADO_PELIGROSIDAD.Entity = value;
					if ((value != null))
					{
						value.REGISTRO.Add(this);
						this._GRADO_PELIGROSIDAD_ID = value.ID;
					}
					else
					{
						this._GRADO_PELIGROSIDAD_ID = default(int);
					}
					this.SendPropertyChanged("GRADO_PELIGROSIDAD");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GESTOR_REGISTRO", Storage="_GESTOR", ThisKey="GESTOR_ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public GESTOR GESTOR
		{
			get
			{
				return this._GESTOR.Entity;
			}
			set
			{
				GESTOR previousValue = this._GESTOR.Entity;
				if (((previousValue != value) 
							|| (this._GESTOR.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GESTOR.Entity = null;
						previousValue.REGISTRO.Remove(this);
					}
					this._GESTOR.Entity = value;
					if ((value != null))
					{
						value.REGISTRO.Add(this);
						this._GESTOR_ID = value.ID;
					}
					else
					{
						this._GESTOR_ID = default(int);
					}
					this.SendPropertyChanged("GESTOR");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GESTION_REGISTRO", Storage="_GESTION", ThisKey="GESTION_ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public GESTION GESTION
		{
			get
			{
				return this._GESTION.Entity;
			}
			set
			{
				GESTION previousValue = this._GESTION.Entity;
				if (((previousValue != value) 
							|| (this._GESTION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GESTION.Entity = null;
						previousValue.REGISTRO.Remove(this);
					}
					this._GESTION.Entity = value;
					if ((value != null))
					{
						value.REGISTRO.Add(this);
						this._GESTION_ID = value.ID;
					}
					else
					{
						this._GESTION_ID = default(int);
					}
					this.SendPropertyChanged("GESTION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESTADO_MATERIA_REGISTRO", Storage="_ESTADO_MATERIA", ThisKey="ESTADO_ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ESTADO_MATERIA ESTADO_MATERIA
		{
			get
			{
				return this._ESTADO_MATERIA.Entity;
			}
			set
			{
				ESTADO_MATERIA previousValue = this._ESTADO_MATERIA.Entity;
				if (((previousValue != value) 
							|| (this._ESTADO_MATERIA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ESTADO_MATERIA.Entity = null;
						previousValue.REGISTRO.Remove(this);
					}
					this._ESTADO_MATERIA.Entity = value;
					if ((value != null))
					{
						value.REGISTRO.Add(this);
						this._ESTADO_ID = value.ID;
					}
					else
					{
						this._ESTADO_ID = default(int);
					}
					this.SendPropertyChanged("ESTADO_MATERIA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESTABLECIMIENTO_REGISTRO", Storage="_ESTABLECIMIENTO", ThisKey="ESTABLECIMIENTO_ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ESTABLECIMIENTO ESTABLECIMIENTO
		{
			get
			{
				return this._ESTABLECIMIENTO.Entity;
			}
			set
			{
				ESTABLECIMIENTO previousValue = this._ESTABLECIMIENTO.Entity;
				if (((previousValue != value) 
							|| (this._ESTABLECIMIENTO.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ESTABLECIMIENTO.Entity = null;
						previousValue.REGISTRO.Remove(this);
					}
					this._ESTABLECIMIENTO.Entity = value;
					if ((value != null))
					{
						value.REGISTRO.Add(this);
						this._ESTABLECIMIENTO_ID = value.ID;
					}
					else
					{
						this._ESTABLECIMIENTO_ID = default(int);
					}
					this.SendPropertyChanged("ESTABLECIMIENTO");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MECANISMO_ENTREGA")]
	public partial class MECANISMO_ENTREGA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _DESCRIPCION;
		
		private EntitySet<REGISTRO> _REGISTRO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDESCRIPCIONChanging(string value);
    partial void OnDESCRIPCIONChanged();
    #endregion
		
		public MECANISMO_ENTREGA()
		{
			this._REGISTRO = new EntitySet<REGISTRO>(new Action<REGISTRO>(this.attach_REGISTRO), new Action<REGISTRO>(this.detach_REGISTRO));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPCION", DbType="VarChar(120) NOT NULL", CanBeNull=false)]
		public string DESCRIPCION
		{
			get
			{
				return this._DESCRIPCION;
			}
			set
			{
				if ((this._DESCRIPCION != value))
				{
					this.OnDESCRIPCIONChanging(value);
					this.SendPropertyChanging();
					this._DESCRIPCION = value;
					this.SendPropertyChanged("DESCRIPCION");
					this.OnDESCRIPCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MECANISMO_ENTREGA_REGISTRO", Storage="_REGISTRO", ThisKey="ID", OtherKey="MECANISMO_ENTREGA_ID")]
		public EntitySet<REGISTRO> REGISTRO
		{
			get
			{
				return this._REGISTRO;
			}
			set
			{
				this._REGISTRO.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_REGISTRO(REGISTRO entity)
		{
			this.SendPropertyChanging();
			entity.MECANISMO_ENTREGA = this;
		}
		
		private void detach_REGISTRO(REGISTRO entity)
		{
			this.SendPropertyChanging();
			entity.MECANISMO_ENTREGA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PRESENTACION")]
	public partial class PRESENTACION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _DESCRIPCION;
		
		private EntitySet<REGISTRO> _REGISTRO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDESCRIPCIONChanging(string value);
    partial void OnDESCRIPCIONChanged();
    #endregion
		
		public PRESENTACION()
		{
			this._REGISTRO = new EntitySet<REGISTRO>(new Action<REGISTRO>(this.attach_REGISTRO), new Action<REGISTRO>(this.detach_REGISTRO));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPCION", DbType="VarChar(120) NOT NULL", CanBeNull=false)]
		public string DESCRIPCION
		{
			get
			{
				return this._DESCRIPCION;
			}
			set
			{
				if ((this._DESCRIPCION != value))
				{
					this.OnDESCRIPCIONChanging(value);
					this.SendPropertyChanging();
					this._DESCRIPCION = value;
					this.SendPropertyChanged("DESCRIPCION");
					this.OnDESCRIPCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRESENTACION_REGISTRO", Storage="_REGISTRO", ThisKey="ID", OtherKey="PRESENTACION_ID")]
		public EntitySet<REGISTRO> REGISTRO
		{
			get
			{
				return this._REGISTRO;
			}
			set
			{
				this._REGISTRO.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_REGISTRO(REGISTRO entity)
		{
			this.SendPropertyChanging();
			entity.PRESENTACION = this;
		}
		
		private void detach_REGISTRO(REGISTRO entity)
		{
			this.SendPropertyChanging();
			entity.PRESENTACION = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PROCESO_GENERADOR")]
	public partial class PROCESO_GENERADOR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NOMBRE;
		
		private EntitySet<REGISTRO> _REGISTRO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    #endregion
		
		public PROCESO_GENERADOR()
		{
			this._REGISTRO = new EntitySet<REGISTRO>(new Action<REGISTRO>(this.attach_REGISTRO), new Action<REGISTRO>(this.detach_REGISTRO));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(180) NOT NULL", CanBeNull=false)]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PROCESO_GENERADOR_REGISTRO", Storage="_REGISTRO", ThisKey="ID", OtherKey="PROCESO_GENERADOR_ID")]
		public EntitySet<REGISTRO> REGISTRO
		{
			get
			{
				return this._REGISTRO;
			}
			set
			{
				this._REGISTRO.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_REGISTRO(REGISTRO entity)
		{
			this.SendPropertyChanging();
			entity.PROCESO_GENERADOR = this;
		}
		
		private void detach_REGISTRO(REGISTRO entity)
		{
			this.SendPropertyChanging();
			entity.PROCESO_GENERADOR = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GRADO_PELIGROSIDAD")]
	public partial class GRADO_PELIGROSIDAD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _DESCRIPCION;
		
		private EntitySet<TIPO_RESIDUO_X_GRADO> _TIPO_RESIDUO_X_GRADO;
		
		private EntitySet<RESIDUO> _RESIDUO;
		
		private EntitySet<REGISTRO> _REGISTRO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDESCRIPCIONChanging(string value);
    partial void OnDESCRIPCIONChanged();
    #endregion
		
		public GRADO_PELIGROSIDAD()
		{
			this._TIPO_RESIDUO_X_GRADO = new EntitySet<TIPO_RESIDUO_X_GRADO>(new Action<TIPO_RESIDUO_X_GRADO>(this.attach_TIPO_RESIDUO_X_GRADO), new Action<TIPO_RESIDUO_X_GRADO>(this.detach_TIPO_RESIDUO_X_GRADO));
			this._RESIDUO = new EntitySet<RESIDUO>(new Action<RESIDUO>(this.attach_RESIDUO), new Action<RESIDUO>(this.detach_RESIDUO));
			this._REGISTRO = new EntitySet<REGISTRO>(new Action<REGISTRO>(this.attach_REGISTRO), new Action<REGISTRO>(this.detach_REGISTRO));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPCION", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string DESCRIPCION
		{
			get
			{
				return this._DESCRIPCION;
			}
			set
			{
				if ((this._DESCRIPCION != value))
				{
					this.OnDESCRIPCIONChanging(value);
					this.SendPropertyChanging();
					this._DESCRIPCION = value;
					this.SendPropertyChanged("DESCRIPCION");
					this.OnDESCRIPCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GRADO_PELIGROSIDAD_TIPO_RESIDUO_X_GRADO", Storage="_TIPO_RESIDUO_X_GRADO", ThisKey="ID", OtherKey="GRADO_ID")]
		public EntitySet<TIPO_RESIDUO_X_GRADO> TIPO_RESIDUO_X_GRADO
		{
			get
			{
				return this._TIPO_RESIDUO_X_GRADO;
			}
			set
			{
				this._TIPO_RESIDUO_X_GRADO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GRADO_PELIGROSIDAD_RESIDUO", Storage="_RESIDUO", ThisKey="ID", OtherKey="GRADO_PELIGROSIDAD_ID")]
		public EntitySet<RESIDUO> RESIDUO
		{
			get
			{
				return this._RESIDUO;
			}
			set
			{
				this._RESIDUO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GRADO_PELIGROSIDAD_REGISTRO", Storage="_REGISTRO", ThisKey="ID", OtherKey="GRADO_PELIGROSIDAD_ID")]
		public EntitySet<REGISTRO> REGISTRO
		{
			get
			{
				return this._REGISTRO;
			}
			set
			{
				this._REGISTRO.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TIPO_RESIDUO_X_GRADO(TIPO_RESIDUO_X_GRADO entity)
		{
			this.SendPropertyChanging();
			entity.GRADO_PELIGROSIDAD = this;
		}
		
		private void detach_TIPO_RESIDUO_X_GRADO(TIPO_RESIDUO_X_GRADO entity)
		{
			this.SendPropertyChanging();
			entity.GRADO_PELIGROSIDAD = null;
		}
		
		private void attach_RESIDUO(RESIDUO entity)
		{
			this.SendPropertyChanging();
			entity.GRADO_PELIGROSIDAD = this;
		}
		
		private void detach_RESIDUO(RESIDUO entity)
		{
			this.SendPropertyChanging();
			entity.GRADO_PELIGROSIDAD = null;
		}
		
		private void attach_REGISTRO(REGISTRO entity)
		{
			this.SendPropertyChanging();
			entity.GRADO_PELIGROSIDAD = this;
		}
		
		private void detach_REGISTRO(REGISTRO entity)
		{
			this.SendPropertyChanging();
			entity.GRADO_PELIGROSIDAD = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GESTOR")]
	public partial class GESTOR : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _DESCRIPCION;
		
		private EntitySet<REGISTRO> _REGISTRO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDESCRIPCIONChanging(string value);
    partial void OnDESCRIPCIONChanged();
    #endregion
		
		public GESTOR()
		{
			this._REGISTRO = new EntitySet<REGISTRO>(new Action<REGISTRO>(this.attach_REGISTRO), new Action<REGISTRO>(this.detach_REGISTRO));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPCION", DbType="VarChar(120) NOT NULL", CanBeNull=false)]
		public string DESCRIPCION
		{
			get
			{
				return this._DESCRIPCION;
			}
			set
			{
				if ((this._DESCRIPCION != value))
				{
					this.OnDESCRIPCIONChanging(value);
					this.SendPropertyChanging();
					this._DESCRIPCION = value;
					this.SendPropertyChanged("DESCRIPCION");
					this.OnDESCRIPCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GESTOR_REGISTRO", Storage="_REGISTRO", ThisKey="ID", OtherKey="GESTOR_ID")]
		public EntitySet<REGISTRO> REGISTRO
		{
			get
			{
				return this._REGISTRO;
			}
			set
			{
				this._REGISTRO.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_REGISTRO(REGISTRO entity)
		{
			this.SendPropertyChanging();
			entity.GESTOR = this;
		}
		
		private void detach_REGISTRO(REGISTRO entity)
		{
			this.SendPropertyChanging();
			entity.GESTOR = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GESTION_x_TIPO")]
	public partial class GESTION_x_TIPO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _GESTION_ID;
		
		private int _TIPO_ID;
		
		private EntityRef<TIPO_GESTION> _TIPO_GESTION;
		
		private EntityRef<GESTION> _GESTION;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGESTION_IDChanging(int value);
    partial void OnGESTION_IDChanged();
    partial void OnTIPO_IDChanging(int value);
    partial void OnTIPO_IDChanged();
    #endregion
		
		public GESTION_x_TIPO()
		{
			this._TIPO_GESTION = default(EntityRef<TIPO_GESTION>);
			this._GESTION = default(EntityRef<GESTION>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GESTION_ID", DbType="Int NOT NULL")]
		public int GESTION_ID
		{
			get
			{
				return this._GESTION_ID;
			}
			set
			{
				if ((this._GESTION_ID != value))
				{
					if (this._GESTION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnGESTION_IDChanging(value);
					this.SendPropertyChanging();
					this._GESTION_ID = value;
					this.SendPropertyChanged("GESTION_ID");
					this.OnGESTION_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TIPO_ID", DbType="Int NOT NULL")]
		public int TIPO_ID
		{
			get
			{
				return this._TIPO_ID;
			}
			set
			{
				if ((this._TIPO_ID != value))
				{
					if (this._TIPO_GESTION.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTIPO_IDChanging(value);
					this.SendPropertyChanging();
					this._TIPO_ID = value;
					this.SendPropertyChanged("TIPO_ID");
					this.OnTIPO_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TIPO_GESTION_GESTION_x_TIPO", Storage="_TIPO_GESTION", ThisKey="TIPO_ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public TIPO_GESTION TIPO_GESTION
		{
			get
			{
				return this._TIPO_GESTION.Entity;
			}
			set
			{
				TIPO_GESTION previousValue = this._TIPO_GESTION.Entity;
				if (((previousValue != value) 
							|| (this._TIPO_GESTION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TIPO_GESTION.Entity = null;
						previousValue.GESTION_x_TIPO.Remove(this);
					}
					this._TIPO_GESTION.Entity = value;
					if ((value != null))
					{
						value.GESTION_x_TIPO.Add(this);
						this._TIPO_ID = value.ID;
					}
					else
					{
						this._TIPO_ID = default(int);
					}
					this.SendPropertyChanged("TIPO_GESTION");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GESTION_GESTION_x_TIPO", Storage="_GESTION", ThisKey="GESTION_ID", OtherKey="ID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public GESTION GESTION
		{
			get
			{
				return this._GESTION.Entity;
			}
			set
			{
				GESTION previousValue = this._GESTION.Entity;
				if (((previousValue != value) 
							|| (this._GESTION.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GESTION.Entity = null;
						previousValue.GESTION_x_TIPO.Remove(this);
					}
					this._GESTION.Entity = value;
					if ((value != null))
					{
						value.GESTION_x_TIPO.Add(this);
						this._GESTION_ID = value.ID;
					}
					else
					{
						this._GESTION_ID = default(int);
					}
					this.SendPropertyChanged("GESTION");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GESTION")]
	public partial class GESTION : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NOMBRE;
		
		private EntitySet<REGISTRO> _REGISTRO;
		
		private EntitySet<GESTION_x_TIPO> _GESTION_x_TIPO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    #endregion
		
		public GESTION()
		{
			this._REGISTRO = new EntitySet<REGISTRO>(new Action<REGISTRO>(this.attach_REGISTRO), new Action<REGISTRO>(this.detach_REGISTRO));
			this._GESTION_x_TIPO = new EntitySet<GESTION_x_TIPO>(new Action<GESTION_x_TIPO>(this.attach_GESTION_x_TIPO), new Action<GESTION_x_TIPO>(this.detach_GESTION_x_TIPO));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(120) NOT NULL", CanBeNull=false)]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GESTION_REGISTRO", Storage="_REGISTRO", ThisKey="ID", OtherKey="GESTION_ID")]
		public EntitySet<REGISTRO> REGISTRO
		{
			get
			{
				return this._REGISTRO;
			}
			set
			{
				this._REGISTRO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GESTION_GESTION_x_TIPO", Storage="_GESTION_x_TIPO", ThisKey="ID", OtherKey="GESTION_ID")]
		public EntitySet<GESTION_x_TIPO> GESTION_x_TIPO
		{
			get
			{
				return this._GESTION_x_TIPO;
			}
			set
			{
				this._GESTION_x_TIPO.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_REGISTRO(REGISTRO entity)
		{
			this.SendPropertyChanging();
			entity.GESTION = this;
		}
		
		private void detach_REGISTRO(REGISTRO entity)
		{
			this.SendPropertyChanging();
			entity.GESTION = null;
		}
		
		private void attach_GESTION_x_TIPO(GESTION_x_TIPO entity)
		{
			this.SendPropertyChanging();
			entity.GESTION = this;
		}
		
		private void detach_GESTION_x_TIPO(GESTION_x_TIPO entity)
		{
			this.SendPropertyChanging();
			entity.GESTION = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ESTADO_MATERIA")]
	public partial class ESTADO_MATERIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _DESCRIPCION;
		
		private EntitySet<REGISTRO> _REGISTRO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDESCRIPCIONChanging(string value);
    partial void OnDESCRIPCIONChanged();
    #endregion
		
		public ESTADO_MATERIA()
		{
			this._REGISTRO = new EntitySet<REGISTRO>(new Action<REGISTRO>(this.attach_REGISTRO), new Action<REGISTRO>(this.detach_REGISTRO));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DESCRIPCION", DbType="VarChar(120) NOT NULL", CanBeNull=false)]
		public string DESCRIPCION
		{
			get
			{
				return this._DESCRIPCION;
			}
			set
			{
				if ((this._DESCRIPCION != value))
				{
					this.OnDESCRIPCIONChanging(value);
					this.SendPropertyChanging();
					this._DESCRIPCION = value;
					this.SendPropertyChanged("DESCRIPCION");
					this.OnDESCRIPCIONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESTADO_MATERIA_REGISTRO", Storage="_REGISTRO", ThisKey="ID", OtherKey="ESTADO_ID")]
		public EntitySet<REGISTRO> REGISTRO
		{
			get
			{
				return this._REGISTRO;
			}
			set
			{
				this._REGISTRO.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_REGISTRO(REGISTRO entity)
		{
			this.SendPropertyChanging();
			entity.ESTADO_MATERIA = this;
		}
		
		private void detach_REGISTRO(REGISTRO entity)
		{
			this.SendPropertyChanging();
			entity.ESTADO_MATERIA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ESTABLECIMIENTO")]
	public partial class ESTABLECIMIENTO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _NOMBRE;
		
		private EntitySet<REGISTRO> _REGISTRO;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNOMBREChanging(string value);
    partial void OnNOMBREChanged();
    #endregion
		
		public ESTABLECIMIENTO()
		{
			this._REGISTRO = new EntitySet<REGISTRO>(new Action<REGISTRO>(this.attach_REGISTRO), new Action<REGISTRO>(this.detach_REGISTRO));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOMBRE", DbType="VarChar(120) NOT NULL", CanBeNull=false)]
		public string NOMBRE
		{
			get
			{
				return this._NOMBRE;
			}
			set
			{
				if ((this._NOMBRE != value))
				{
					this.OnNOMBREChanging(value);
					this.SendPropertyChanging();
					this._NOMBRE = value;
					this.SendPropertyChanged("NOMBRE");
					this.OnNOMBREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESTABLECIMIENTO_REGISTRO", Storage="_REGISTRO", ThisKey="ID", OtherKey="ESTABLECIMIENTO_ID")]
		public EntitySet<REGISTRO> REGISTRO
		{
			get
			{
				return this._REGISTRO;
			}
			set
			{
				this._REGISTRO.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_REGISTRO(REGISTRO entity)
		{
			this.SendPropertyChanging();
			entity.ESTABLECIMIENTO = this;
		}
		
		private void detach_REGISTRO(REGISTRO entity)
		{
			this.SendPropertyChanging();
			entity.ESTABLECIMIENTO = null;
		}
	}
}
#pragma warning restore 1591
